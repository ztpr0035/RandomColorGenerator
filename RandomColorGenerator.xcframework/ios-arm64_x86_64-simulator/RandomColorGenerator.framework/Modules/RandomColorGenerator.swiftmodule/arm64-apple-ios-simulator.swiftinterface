// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name RandomColorGenerator
import Foundation
@_exported import RandomColorGenerator
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class RandomColorGenrators {
  public init()
  public func getRandomColors() -> RandomColorGenerator.Colors
  @objc deinit
}
public enum Colors : Swift.CaseIterable {
  case red
  case green
  case yellow
  case blue
  case white
  case black
  public static func == (a: RandomColorGenerator.Colors, b: RandomColorGenerator.Colors) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public typealias AllCases = [RandomColorGenerator.Colors]
  nonisolated public static var allCases: [RandomColorGenerator.Colors] {
    get
  }
  public var hashValue: Swift.Int {
    get
  }
}
extension RandomColorGenerator.Colors : Swift.Equatable {}
extension RandomColorGenerator.Colors : Swift.Hashable {}
